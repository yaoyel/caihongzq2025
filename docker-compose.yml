services:
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile
    container_name: rbridge-client
    restart: always
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - client-dist:/app/dist

  server: 
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: rbridge-server
    restart: always
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - app-network
    ports:
      - "3000:3000" 

  db:
    image: postgres:14-alpine
    container_name: rbridge-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "15432:5432"

  redis:
    image: redis:alpine
    container_name: rbridge-redis
    restart: always
    networks:
      - app-network
    volumes:
      - ./redis-data:/data
    ports:
      - "6379:6379"  
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  nginx:
    image: nginx:alpine
    container_name: rbridge-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf  
      - client-dist:/usr/share/nginx/html  
    depends_on:
      - client
      - server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  client-dist:
  redis-data: 